import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.Watcher;
import java.util.*;
import org.apache.zookeeper.AsyncCallback.*;
import org.apache.zookeeper.AsyncCallback.DataCallback;
import org.apache.zookeeper.AsyncCallback.StringCallback;
import org.apache.zookeeper.AsyncCallback.VoidCallback;
import org.apache.zookeeper.AsyncCallback.StatCallback;
import org.apache.zookeeper.ZooDefs.Ids;
import org.apache.zookeeper.AsyncCallback.ChildrenCallback;
import org.apache.zookeeper.KeeperException.Code;
import org.apache.zookeeper.data.Stat;
import org.apache.zookeeper.*;
import org.slf4j.*;
public class AdminClient implements Watcher {
 ZooKeeper zk;
 String hostPort;
 AdminClient(String hostPort) {
  this.hostPort = hostPort;
 }
 void start() throws Exception {
  zk = new ZooKeeper(hostPort, 15000, this);
 }
 void listState() throws KeeperException {
  try {
   Stat stat = new Stat();
   byte masterData[] = zk.getData("/master", false, stat);
   Date startDate = new Date(stat.getCtime());
   System.out.println("Master: " + new String(masterData) +
    " since " + startDate);
  } catch (NoNodeException e) {
   System.out.println("No Master");
  }
  System.out.println("Workers:");
  for (String w: zk.getChildren("/workers", false)) {
   byte data[] = zk.getData("/workers/" + w, false, null);
   String state = new String(data);
   System.out.println("\t" + w + ": " + state);
  }
  System.out.println("Tasks:");
  for (String t: zk.getChildren("/assign", false)) {
   System.out.println("\t" + t);
  }
 }
 public void process(WatchedEvent e) {
  System.out.println(e);
 }
 public static void main(String args[]) throws Exception {
  AdminClient c = new AdminClient(args[0]);
  c.start();
  c.listState();
 }
}
